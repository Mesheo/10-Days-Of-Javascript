#include <stdio.h>
void imprime(int*tab,int n){
  for(int i=n-1;i>=0;i--){
    for(int j=0;j<n;j++){
      printf("%d ",*(tab+n*i+j));
    }
    printf("\n");
  }
}
//TESTA VE SE PODE
int queensafe(int* tabuleiro,int n,int lin,int col){
  //diagonal esquerda pra baixo
  for(int i=lin-1,j=col-1;i>=0 && j>=0;i--,j--){
    if (*(tabuleiro+n*i+j))
      return 0;
  }

  //diagonal direita pra baixo
  for(int i=lin-1,j=col+1;i>=0 && j<n;i--,j++){
    if (*(tabuleiro+n*i+j))
      return 0;
  }
  //checa linha
  for(int i=0;i<col;i++){
    if(*(tabuleiro+n*lin+i))
      return 0;
  }
  //checa coluna
  for(int i=0;i<lin;i++){
    if(*(tabuleiro+n*i+col))
      return 0;
  }
  return 1;
}
//RECURSAO PRINCIPAL
int rainha(int*tabuleiro,int n,int linha){
  if(n-linha==0){
    return 1;
  }
  for(int i=0;i<n;i++){
    //se tiver segura na posiçao
    if(queensafe(tabuleiro,n,linha,i)){
      //seta a posiçao
      *(tabuleiro+n*linha+i)=1;
      //ve se aquela posiçao corresponde ao resto
      if(rainha(tabuleiro,n,linha+1)){
        return 1;
      }
      //BACKTRACK
      else{
        *(tabuleiro+n*linha+i)=0;
      } 
    } 
  }
  return 0;
}
//CHAMADA CRIAÇAO
int queens(n){
  //cria o espaço do tabuleiro
  int tabuleiro[n][n];
  for (int i;i<n;i++){
    for(int j=0;j<n;j++){
      tabuleiro[i][j]=0;
    }
  }
  //chama a recursao (condicional caso seja impossivel)
  if(rainha(&tabuleiro[0][0],n,0)==1){
    imprime(&tabuleiro[0][0],n);
    return 1;
  }
  else{  
    puts("Nao deu nao guerreiro\n");
  return 0;
  }
}

int main(void) {
  int n;
  scanf("%d",&n);
  queens(n);
  return 0;
}
